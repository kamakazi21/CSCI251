An overloaded operator has different functionalities depending ont the argument given to it
Cannot nest comments
Primitive data types - int, double, char
Signed or Unsigned - positive,negative, neutral
Primitive data types have a one to one relationship with memory
Declaring a Function - Instance of the function
Defining a Function - Content inside the function.
All data structure declarations and function prototypes that you want to access should be in.h file
Pointers are variables that contain addresses
Void functions- means they have no return value
Functions need to be declared before main function
Declaraing a function - Function Header 
Defining a function - Function Header with content inside it.
Function prototypes you want to access in other files must be declared as .h
Defining declarations go in the inplementation file, such as print.cpp
Dont put using NAMESPACE STD in include files

Primitive Types mapped directly into memory
Pointers can point to Addresses, Variables, Null 
To get the address of something we use the address of operator &
cout << &value << end - output the address
referneceValue is an alias, not an object
function can pass value in two ways: by value and by reference
when calling a function, ailing arguments can be omitted if default values are declared in the funciton parameters
pointers are not aliases, ther are actual objects.
* is a dereferencing operarator tied to a variable name.
pointer can point nowehere by setting to 0 or nullptr;
compund types are terms defined by other types
gcc - c f1.cpp - of1.0
